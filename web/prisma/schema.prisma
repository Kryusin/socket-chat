// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  image    String
  password String

  threadsInitialized Thread[]    @relation("User1Thread")
  threadsReceived    Thread[]    @relation("User2Thread")
  messages           Message[]
  blockingUsers      UserBlock[] @relation("BlockingUser")
  blockedUsers       UserBlock[] @relation("BlockedUser")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thread {
  id       String    @id @default(cuid())
  user1Id  String
  user2Id  String
  user1    User      @relation("User1Thread", fields: [user1Id], references: [id])
  user2    User      @relation("User2Thread", fields: [user2Id], references: [id])
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([user1Id, user2Id])
}

enum MessageType {
  TEXT
  LINK
}

model Message {
  id      String @id @default(cuid())
  content String @db.Text

  threadId String
  thread   Thread @relation(fields: [threadId], references: [id])
  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  messageType MessageType @default(TEXT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SocketAuthToken {
  userId String
  token  String   @unique
  expire DateTime

  @@unique([userId, token])
}

model UserBlock {
  id             String @id @default(cuid())
  blockingUserId String
  blockingUser   User   @relation("BlockingUser", fields: [blockingUserId], references: [id])
  blockedUserId  String
  blocedUser     User   @relation("BlockedUser", fields: [blockedUserId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([blockingUserId, blockedUserId])
}
